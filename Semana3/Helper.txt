Ficha 3 EA_nonio3.pdf

Exercicio 1:

A = 7
C = 1,5,3,2
    0 1 2 3 4


                            7,0
                  (sim)   /     \    (não)
                    6,2            7,1
                    /\             /
            1,2           6,3      2,3  
            /\           /\        /\
        -2,3    1,3     ... ... ...  2.4
        /        /   \                /
     x       -1,4     1,4           0,5
(exemplo sem certezas, mas penso que esteja bem)



                       

Exemplo correto--> Coin1
A = 12

C = 3,5,7

                        (TRUE)
                        12,1
                        /   \
                    9,2         12,2         
                    /  \           /
                4,3     9,3     7,3
                        /    \      \ 0,4 (true)
            /    \      2,4   9,4

     -3,4 false  4,4 false    


Coin2



                        (TRUE)
                        12,0
                        /   \
                    9,1         7,2     
                    /  \           /
                4,2     2,3     0,3
                      (false)   (true)
            /          
     -3,3 false 

Coin1(A,i)
if A==0
    return 1
if A>0 or i>n
    return 0
return Coin1(A-c1,i+1)+Coin1(A,i+1

Coin2(A,i):
    if A = 0:
        return 1
    if A < 0:
        return 0
    res = 0
    for j=i+1 to n:
        res+= Coin2(A-cj,j);
    return res    

 d) agrupar numeros iguais para nao repetir a mesma moeda.

 e) 
    Coin1(A,i,m):
        if m >= best:
            return best
        if A == 0:
            if m > best:
            return m
        if A < 0 or i > m:
            return +infinito
        return min(Coin1(A-ci,i+1,m+1),Coin1(A,i+1,m))    




Coin2(A,i,m):
    if m >= best:
        return best
    if A = 0:
        best = m
        return best
    if A < 0:
        return +infinito
    res = +infinito
    for j=i+1 to n:
        res= min(res,Coin2(A-cj,j,m+1))
    return res    



/**********************************************             MOOSHAK              ******************************************************/

cabo minimo possivel
limite de numero de ligacoes
numero de links a sair de cada no é limitado

EOF -- "NO WAY"



1 --(62)-- 4   ------------
| \                        |
(1) \                      |
|      \                   |
2--(34)-- 6                |
|          |               |(1)
(1)        |(99)           |
|          |               |
3 ---(13)--5               |
|---------------------------


primeiro caso 

                        (1)
                        /
                     1 /
                    (2)---34--(6)   dá 38
                    |
                    |1
                    |
                    (3) --1-- (4) ----1---(5)

Caso que dá erro
(1)---23----(3)
|           /
|          /
70       / 13
|      /
|    /
(2)/




(4)---43----(5)
|           /
|          /
16       / 45
|      /
|    /
(6)/



PSEUDO CODIGOOOOOO!!!
 
c - custo de ligações(SOMA)
best -- global(melhor)
v = nºde ligacoes (ACHO)
n =  nº de nós
connected 
deg -- grau de cada nó qunatas ligações tem, 
F(V,c):
    if c >= best:
        return
    if v == m:
        best = c
    for i=1 to n:           // 
        if connected[i] == true  and deg[i] < k:
            for j = 1 to n:
                if connected[j] = false and grafo[i][j] >= 0:
                    deg[i] += 1
                    deg[j] += 1
                    connected[j] == TRUE;
                    F(V+1, c+g[i][j])
                    connected[j] = false;
                    deg[j] -= 1;
                    deg[i] -= 1


 main:
    best = +infinito        ---> BEST pode ser a soma dos 
    connected[1] = TRUE
    F(1,0);
    if best < +infinito:
        print(best)
    else:  
        print("NO WAY")            



grafo :
    1   2   3
1   -1  1   2 
2   20  -1  90
3       40  -1